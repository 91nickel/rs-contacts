stages:
  - app
  - image
  - deploy

building and testing app:
  stage: app
  image: node:18
  script:
    - npm ci
    - npm run test
    - npm run build
  cache:
#    - policy: push
#      key: "${CI_COMMIT_REF_SLUG}|node_modules"
#      paths:
#        - "./node_modules"
    - policy: push
      key: "${CI_COMMIT_REF_SLUG}|build"
      paths:
        - "./build"

building image:
  stage: image
  image: docker
  services:
    - docker:dind
  variables:
    IMAGE_NAME: "${CI_REGISTRY_LOGIN}/rs-contacts"
  script:
    - docker login -u ${CI_REGISTRY_LOGIN} -p ${CI_REGISTRY_PASSWORD}
    - docker build --tag ${IMAGE_NAME} --no-cache .
    - docker push ${IMAGE_NAME}
  only:
    - master
  cache:
#    - policy: pull
#      key: "${CI_COMMIT_REF_SLUG}|node_modules"
#      paths:
#        - "./node_modules"
    - policy: pull
      key: "${CI_COMMIT_REF_SLUG}|build"
      paths:
        - "./build"

deploy:
  stage: deploy
  image: docker
  before_script:
    - chmod 600 ${SSH_KEY}
  script:
    - ssh -p 22122 -i ${SSH_KEY} -o StrictHostKeyChecking=no nikita@test.foroffice.ru "docker pull ${CI_REGISTRY_LOGIN}/rs-contacts && docker-compose -f ~/rs-contacts/docker-compose.yml up -d"
  only:
    - master
  when: manual
