image: docker:20.10.5
services:
  - docker:20.10.5-dind

stages:
#  - install
#  - build
  - deploy

#installing dependencies:
#  stage: install
#  image: node:18
#  script:
#    - pwd
##    - cd /builds/Nikita_Kuznetsov/rs-contacts
#    - npm ci
#  cache:
#    policy: push
#    key: "${CI_COMMIT_REF_SLUG}|node_modules"
#    paths:
#      - "./node_modules"
#
#creating production build:
#  stage: build
#  image: node:18
#  script:
#    - npm run build
#  cache:
#    policy: pull
#    key: "${CI_COMMIT_REF_SLUG}|node_modules"
#    paths:
#      - "./node_modules"
#
#running tests:
#  stage: build
#  image: node:18
#  script:
#    - npm run test
#  cache:
#    policy: pull
#    key: "${CI_COMMIT_REF_SLUG}|node_modules"
#    paths:
#      - "./node_modules"

building docker image:
  stage: deploy
  variables:
    IMAGE_NAME: "${CI_REGISTRY_LOGIN}/rs-contacts"
  script:
    - docker build -t ${IMAGE_NAME} --no-cache .
    - docker login -u ${CI_REGISTRY_LOGIN} -p ${CI_REGISTRY_PASSWORD} ${CI_REGISTRY_URL}
    - docker push ${IMAGE_NAME}

#deploy:
#  stage: deploy
#  script:
#    - docker login -u $CI_REGISTRY_LOGIN -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
##    - docker build -t $CI_REGISTRY/nikita_kuznetsov/cicd/python-api:latest .
##    - docker push $CI_REGISTRY/nikita_kuznetsov/cicd/python-api:latest
#  only:
#    - master
#  when: manual
#
#install:
#  stage: test
#  script:
#    - npm install
#
#test:
#  stage: test
#  script:
#    - docker login -u $CI_REGISTRY_LOGIN -p $CI_REGISTRY_PASSWORD $CI_REGISTRY_URL
#    - docker pull hello-world
#    - docker run --rm hello-world
##    - docker pull $CI_REGISTRY/nikita_kuznetsov/cicd/python-api:latest
##    - docker run -dt --name api --expose 5290 $CI_REGISTRY/nikita_kuznetsov/cicd/python-api
##    - sleep 10s
##    - docker ps
##    - docker exec api curl localhost:5290/get_info
##    - docker stop api
